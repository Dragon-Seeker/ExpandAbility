plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "com.matthewprenger.cursegradle"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
}

loom {
    refmapName = "expandability.refmap.mixins.json" // Bug in architectury requires this to be set manually
}

dependencies {
    minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modRuntime "be.florens:autoload-fabric:${rootProject.autoload_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"

    implementation(project(path: ":common")) {
        transitive = false
    }
    developmentFabric(project(path: ":common")) {
        transitive = false
    }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) {
        transitive = false
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier "fabric"
}

jar {
    classifier "dev"
}

java {
    withSourcesJar()
}

sourcesJar {
    def commonSources = project(":common").remapSourcesJar
    dependsOn commonSources
    from zipTree(commonSources.output)
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                classifier null
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        if (System.getenv("MAVEN_PASS") != null) {
            maven {
                url = "sftp://florens.be:22/repo"
                credentials {
                    username = "maven"
                    password = System.getenv("MAVEN_PASS")
                }
            }
        }
    }
}

curseforge {
    if (System.getenv("CURSE_API_KEY") != null) {
        apiKey = System.getenv("CURSE_API_KEY")
        project {
            id = project.curse_project
            releaseType = "release"
            addGameVersion "1.17.1"
            addGameVersion "Fabric"
            mainArtifact(remapJar.archivePath) {
                displayName = "[Fabric $rootProject.supported_versions] v$project.version"
            }
            afterEvaluate {
                uploadTask.dependsOn("build")
            }
        }
    }
    options {
        forgeGradleIntegration = false
        javaVersionAutoDetect = false
    }
}

rootProject.tasks.getByName("curseforgePublish").dependsOn tasks.getByName("curseforge")
